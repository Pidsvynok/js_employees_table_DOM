{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAgB,SAAS,gBAAgB,CAAC,YAC1C,EAAgB,SAAS,aAAa,CAAC,YAGvC,EAAa,AADJ,MAAM,IAAI,CAAC,GACA,GAAG,CAAC,SAAC,CAA/B,EAAwC,OAAA,EAAG,EAAI,QAAQ,C,GACnD,EAAqB,KA2CzB,EAAc,gBAAgB,CAAC,QAAS,SAAC,CAAzC,EACE,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,CAAW,CAC7B,IAAM,EAAY,AA3CtB,SAAgB,CAAS,CAAE,CAAK,CAAE,CAAC,EACjC,GAAI,EAAE,MAAM,GAAK,EACf,EAAM,OAAO,QAEb,OAAQ,GACN,IAAK,OACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAI,CAAhB,EACE,OAAO,CAAE,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,CAAE,CAAC,EAAE,CAAC,WAAW,CAC1D,GACA,KAEF,KAAK,WACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAI,CAAhB,EACE,OAAO,CAAE,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,CAAE,CAAC,EAAE,CAAC,WAAW,CAC1D,GACA,KACF,KAAK,SACH,EAAM,IAAI,CAAC,SAAC,CAAA,CAAI,CAAhB,EACE,OAAO,CAAE,CAAC,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,CAAE,CAAC,EAAE,CAAC,WAAW,CAC1D,GACA,KACF,KAAK,MACH,EAAM,IAAI,CACR,SAAC,CAAA,CAAI,CADP,EAEI,OAAA,SAAS,CAAE,CAAC,EAAE,CAAC,WAAW,CAAE,IAAM,SAAS,CAAE,CAAC,EAAE,CAAC,WAAW,CAAE,G,GAElE,KACF,KAAK,SACH,EAAM,IAAI,CACR,SAAC,CAAA,CAAI,CADP,EAEI,OAAA,SAAS,CAAE,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,IACjC,SAAS,CAAE,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,G,EAEzC,CAKF,OAFA,EAAqB,MAAM,MAAM,CAE1B,CACT,EAI6B,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,GAAI,EAAY,EAElE,CAAA,EAAM,WAAW,CAAG,GAEpB,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAG,WAAW,CAAC,EACjB,GACA,EAAM,WAAW,CAAC,EACpB,EACF,CACF,GAIA,IAAI,EAAoB,KAExB,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACM,GACF,EAAkB,SAAS,CAAC,MAAM,CAAC,UAGrC,AADA,CAAA,EAAoB,EAAE,MAAM,CAAC,aAAa,AAAb,EACX,SAAS,CAAC,GAAG,CAAC,SAClC,GAGA,IAAM,EAAO,SAAS,KAAK,CAAC,EAAE,CAE9B,EAAK,gBAAgB,CAAC,SAAU,SAAC,CAAjC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAiB,EAAG,EAAK,QAAQ,EACpC,KAAK,CAAC,EAAG,GACT,GAAG,CAAC,SAAC,CAFR,EAEiB,OAAA,EAAK,KAAK,A,GACrB,EAAS,SAAS,aAAa,CAAC,MAEjC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAmB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAnB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAkC,CAAlC,IAAM,EAAN,EAAA,KAAA,CACG,EAAW,SAAS,aAAa,CAAC,KAExC,CAAA,EAAS,WAAW,CAAG,EACvB,EAAO,MAAM,CAAC,EAChB,C,C,M,E,CALK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOL,EAAM,MAAM,CAAC,GAEb,IAAM,EACJ,EAAG,CAAa,CAAC,EAAc,MAAM,CAAG,EAAE,CAAC,QAAQ,EAGrD,EAAW,IAAI,CAAC,EAClB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tbody = document.querySelector(\"tbody\");\nvar rowCollection = document.querySelectorAll(\"tbody tr\");\nvar sortFieldsRow = document.querySelector(\"thead tr\");\nvar rowArr = Array.from(rowCollection);\nvar attributes = rowArr.map(function(row) {\n    return _to_consumable_array(row.children);\n});\nvar lastClickedElement = null;\nfunction sortBy(sortField, array, e) {\n    if (e.target === lastClickedElement) array.reverse();\n    else switch(sortField){\n        case \"Name\":\n            array.sort(function(a1, a2) {\n                return a1[0].textContent.localeCompare(a2[0].textContent);\n            });\n            break;\n        case \"Position\":\n            array.sort(function(a1, a2) {\n                return a1[1].textContent.localeCompare(a2[1].textContent);\n            });\n            break;\n        case \"Office\":\n            array.sort(function(a1, a2) {\n                return a1[2].textContent.localeCompare(a2[2].textContent);\n            });\n            break;\n        case \"Age\":\n            array.sort(function(a1, a2) {\n                return parseInt(a1[3].textContent, 10) - parseInt(a2[3].textContent, 10);\n            });\n            break;\n        case \"Salary\":\n            array.sort(function(a1, a2) {\n                return parseInt(a1[4].textContent.slice(1)) - parseInt(a2[4].textContent.slice(1));\n            });\n    }\n    lastClickedElement = event.target;\n    return array;\n}\nsortFieldsRow.addEventListener(\"click\", function(e) {\n    if (e.target.tagName === \"TH\") {\n        var sortedArr = sortBy(e.target.textContent.trim(), attributes, e);\n        tbody.textContent = \"\";\n        sortedArr.forEach(function(element) {\n            var tr = document.createElement(\"tr\");\n            element.forEach(function(child) {\n                tr.appendChild(child);\n            });\n            tbody.appendChild(tr);\n        });\n    }\n});\n// -----------------------------------------------------------------\nvar selectedRowActive = null;\ntbody.addEventListener(\"click\", function(e) {\n    if (selectedRowActive) selectedRowActive.classList.remove(\"active\");\n    selectedRowActive = e.target.parentElement;\n    selectedRowActive.classList.add(\"active\");\n});\n// -----------------------------------------------------------------\nvar form = document.forms[0];\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var elementsValue = _to_consumable_array(form.elements).slice(0, 5).map(function(elem) {\n        return elem.value;\n    });\n    var newRow = document.createElement(\"tr\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = elementsValue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var elemValue = _step.value;\n            var newField = document.createElement(\"td\");\n            newField.textContent = elemValue;\n            newRow.append(newField);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    tbody.append(newRow);\n    var newCollectionElement = _to_consumable_array(rowCollection[rowCollection.length - 1].children);\n    attributes.push(newCollectionElement);\n});\n\n//# sourceMappingURL=index.3d7f09e3.js.map\n","'use strict';\n\nconst tbody = document.querySelector('tbody');\nconst rowCollection = document.querySelectorAll('tbody tr');\nconst sortFieldsRow = document.querySelector('thead tr');\n\nconst rowArr = Array.from(rowCollection);\nconst attributes = rowArr.map((row) => [...row.children]);\nlet lastClickedElement = null;\n\nfunction sortBy(sortField, array, e) {\n  if (e.target === lastClickedElement) {\n    array.reverse();\n  } else {\n    switch (sortField) {\n      case 'Name':\n        array.sort((a1, a2) => {\n          return a1[0].textContent.localeCompare(a2[0].textContent);\n        });\n        break;\n\n      case 'Position':\n        array.sort((a1, a2) => {\n          return a1[1].textContent.localeCompare(a2[1].textContent);\n        });\n        break;\n      case 'Office':\n        array.sort((a1, a2) => {\n          return a1[2].textContent.localeCompare(a2[2].textContent);\n        });\n        break;\n      case 'Age':\n        array.sort(\n          (a1, a2) =>\n            parseInt(a1[3].textContent, 10) - parseInt(a2[3].textContent, 10),\n        );\n        break;\n      case 'Salary':\n        array.sort(\n          (a1, a2) =>\n            parseInt(a1[4].textContent.slice(1)) -\n            parseInt(a2[4].textContent.slice(1)),\n        );\n    }\n  }\n\n  lastClickedElement = event.target;\n\n  return array;\n}\n\nsortFieldsRow.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TH') {\n    const sortedArr = sortBy(e.target.textContent.trim(), attributes, e);\n\n    tbody.textContent = '';\n\n    sortedArr.forEach((element) => {\n      const tr = document.createElement('tr');\n\n      element.forEach((child) => {\n        tr.appendChild(child);\n      });\n      tbody.appendChild(tr);\n    });\n  }\n});\n\n// -----------------------------------------------------------------\n\nlet selectedRowActive = null;\n\ntbody.addEventListener('click', (e) => {\n  if (selectedRowActive) {\n    selectedRowActive.classList.remove('active');\n  }\n  selectedRowActive = e.target.parentElement;\n  selectedRowActive.classList.add('active');\n});\n\n// -----------------------------------------------------------------\nconst form = document.forms[0];\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const elementsValue = [...form.elements]\n    .slice(0, 5)\n    .map((elem) => elem.value);\n  const newRow = document.createElement('tr');\n\n  for (const elemValue of elementsValue) {\n    const newField = document.createElement('td');\n\n    newField.textContent = elemValue;\n    newRow.append(newField);\n  }\n\n  tbody.append(newRow);\n\n  const newCollectionElement = [\n    ...rowCollection[rowCollection.length - 1].children,\n  ];\n\n  attributes.push(newCollectionElement);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tbody","document","querySelector","rowCollection","querySelectorAll","sortFieldsRow","attributes","rowArr","map","row","children","lastClickedElement","addEventListener","e","target","tagName","sortedArr","sortBy","sortField","array","reverse","sort","a1","a2","textContent","localeCompare","parseInt","event","trim","forEach","element","tr","createElement","child","appendChild","selectedRowActive","classList","remove","parentElement","add","form","forms","preventDefault","elementsValue","elements","elem","value","newRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","elemValue","newField","append","err","return","newCollectionElement","push"],"version":3,"file":"index.3d7f09e3.js.map"}